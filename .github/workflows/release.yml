name: "Release"
run-name: Version ${{ inputs.tag }} (commit ${{ inputs.target_commit }})
on:
  workflow_dispatch: 
    inputs:
      target_commit:
        type: string
        required: true
        description: The commit to publish
      tag:
        type: string
        required: true
        description: "Sementic version tag for this release (eg: 1.2.3)"

jobs:
  publish_to_stores:
    name: Publish to ${{ matrix.stores }} store
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        stores:
          # - no
          - Chrome
          # - Firefox
          # - Edge
    steps:
      - name: Download artifact from commit
        id: download-packages
        uses: dawidd6/action-download-artifact@v3
        with:
          github_token: ${{ secrets.ACCESS_DEVOPS_TOKEN }}
          workflow: main-merge.yaml
          commit: ${{ inputs.target_commit }}

      - name: Identify packages
        id: identify-package
        run: |
          echo "chrome_package=$(ls chrome-*.zip)" >> "$GITHUB_OUTPUT"
          echo "firefox_package=$(ls firefox-*.zip)" >> "$GITHUB_OUTPUT"
          echo "edge_package=$(ls edge-*.zip)" >> "$GITHUB_OUTPUT"

      - name: Chrome store upload
        if: ${{ matrix.stores == 'Chrome' }}
        uses: browser-actions/release-chrome-extension@latest
        with:
          extension-id: "================"
          extension-path: ${{ steps.identify-package.outputs.chrome_package }}
          oauth-client-id: ${{ secrets.CHROME_CLIENT_ID }}
          oauth-client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          oauth-refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}

      - name: Firefox store upload
        if: ${{ matrix.stores == 'Firefox' }}
        uses: browser-actions/release-firefox-addon@latest
        with:
          addon-id: "================"
          addon-path: ${{ steps.identify-package.outputs.firefox_package }}
          auth-api-issuer: ${{ secrets.FIREFOX_API_ISSUER }}
          auth-api-secret: ${{ secrets.FIREFOX_API_SECRET }}

      - name: Edge store upload
        if: ${{ matrix.stores == 'Edge' }}
        uses: wdzeng/edge-addon@v1
        with:
          product-id: "================"
          zip-path: ${{ steps.identify-package.outputs.edge_package }}
          client-id: ${{ secrets.EDGE_CLIENT_ID }}
          client-secret: ${{ secrets.EDGE_CLIENT_SECRET }}
          access-token-url: ${{ secrets.EDGE_ACCESS_TOKEN_URL }}

  
  create_release:
    name: Create Release ${{ inputs.tag }}
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact from commit
        id: download-packages
        uses: dawidd6/action-download-artifact@v3
        with:
          github_token: ${{ secrets.ACCESS_DEVOPS_TOKEN }}
          workflow: main-merge.yaml
          commit: ${{ inputs.target_commit }}
      - name: Print download output
        id: print_download_output
        run: echo '${{ steps.download-packages.outputs.artifacts }}'

      # - name: Install GH CLI
      #   uses: dev-hanz-ops/install-gh-cli-action@v0.1.0
      #   with:
      #     gh-cli-version: 2.32.0 # optional, see action.yml for current default

      - name: Identify packages
        id: identify-package
        run: |
          echo "chrome_package=$(ls chrome-*/*.zip)" >> "$GITHUB_OUTPUT"
          echo "firefox_package=$(ls firefox-*/*.zip)" >> "$GITHUB_OUTPUT"
          echo "edge_package=$(ls edge-*/*.zip)" >> "$GITHUB_OUTPUT"

      - name: Rename packages
        id: rename-packages
        run: |
          mv ${{ steps.identify-package.outputs.chrome_package }} ./chrome-${{ inputs.tag }}.zip || true
          mv ${{ steps.identify-package.outputs.firefox_package }} ./firefox-${{ inputs.tag }}.zip || true
          mv ${{ steps.identify-package.outputs.edge_package }} ./edge-${{ inputs.tag }}.zip || true

      - name: Create release
        id: create-release
        env:
          GH_TOKEN: ${{ secrets.ACCESS_DEVOPS_TOKEN }}
        run: |
          ls -la
          ls -la -- */
          gh release create ${{ inputs.tag }} \
            chrome-${{ inputs.tag }}.zip firefox-${{ inputs.tag }}.zip edge-${{ inputs.tag }}.zip \
            --repo="$GITHUB_REPOSITORY" \
            --title=v${{ inputs.tag }} \
            --target=${{ inputs.target_commit }} \
            --latest \
            --generate-notes
